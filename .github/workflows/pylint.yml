name: Pylint

on: [push, pull_request]
jobs:
  lint:
    runs-on: ubuntu-latest
      
    permissions:
      # Give the default GITHUB_TOKEN write permission to commit and push the
      # added or changed files to the repository.
      contents: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: "Setup installation requirements"
        run: |
          python -m pip install --upgrade pip
          pip install pylint jq
      
      - name: "Lint package(s)"
        run: |
          mkdir -p post_traces
          pylint --exit-zero ./hw2_rsc/*.py | tee ./post_traces/pylint_trace.txt >> pylint_output.json

          SCORE=$(jq '.[0].score' pylint_output.json)
          echo "score=$SCORE" >> $GITHUB_ENV
          rm -f pylint_output.json
        
      - name: Set up Mutex
        uses: ben-z/gh-action-mutex@v1.0.0-alpha.9
        
      - name: Critical Section (commit the report)
        run: |
          sleep 3
          git config --local user.email "test@github.com"
          git config --local user.name "GitHub Action test"
          git status
          git add ./post_traces/pylint_trace.txt
          git commit --allow-empty -m "Update pylint report"
          git pull --rebase
          git push
        continue-on-error: true
        
      - name: Create Awesome Badge
        uses: schneegans/dynamic-badges-action@v1.7.0
        with:
            auth: ${{ secrets.GIST_SECRET }}
            gistID: cbc5a0932cfa7cc46e32324d7e3a846f
            filename: pylint.json # Use test.svg if you want to use the SVG mode.
            label: Pylint
            message: ${{ env.score }}
            valColorRange: ${{ env.score }}
            maxColorRange: 10
            minColorRange: 0
            namedLogo: python
            
